conditions: v1
sudo: required
dist: xenial
language: node_js
node_js:
  - "node"

addons:
  chrome: stable

services:
  - xvfb
cache:
  yarn: true
  directories:
    - node_modules

before_install:
 - export DISPLAY=:99.0

script:
  - set -ev
  - yarn install

stages:
  - Tests
  - Release canary
  - Release

jobs:
  fast_finish: true
  include:
    # https://docs.travis-ci.com/user/build-stages/deploy-github-releases/
    # publish canary package if on master
    - stage: Release
      if: (tag IS present)
      name: "Release"
      script:
        - chmod +x ./scripts/after_deploy.sh
        - ./scripts/after_deploy.sh "$TRAVIS_TAG" "$JENKINS_TAG_TOKEN"
    # https://docs.travis-ci.com/user/build-stages/deploy-github-releases/
    # publish canary package if on master
    - stage: Release canary
      if: (branch = master) AND (type != pull_request) AND commit_message !~ /^chore\(release\)/ AND commit_message !~ /^(chore).*(update dist)$/
      name: "Release canary"
      script:
        - echo "Run standard-version"
        - yarn run release --prerelease canary --skip.commit=true --skip.tag=true
        - sha=$(git rev-parse --verify --short HEAD)
        - echo "Current sha ${sha}"
        - currentVersion=$(npx -c 'echo "$npm_package_version"')
        - commitNumberAfterTag=$(git rev-list  `git rev-list --tags --no-walk --max-count=1`..HEAD --count)
        - echo "Current version ${currentVersion}"
        - newVersion=$(echo $currentVersion | sed -e "s/canary\.[[:digit:]]/canary.${commitNumberAfterTag}-${sha}/g")
        - echo "New version ${newVersion}"
        - sed -iE "s/$currentVersion/$newVersion/g" package.json
        - sed -iE "s/$currentVersion/$newVersion/g" CHANGELOG.md
        - rm package.jsonE
        - rm CHANGELOG.mdE
        - yarn run build:ovp && yarn run build:ott && npm run commit:dist
        - echo $newVersion
        - chmod +x ./scripts/after_deploy.sh
        - ./scripts/after_deploy.sh "${newVersion}" "$JENKINS_CANARY_TOKEN"
    # Required tests
    - stage: Tests
      if: (branch = master) OR (tag IS present) OR (type = pull_request)
      name: "Running lint"
      script:
        - yarn run eslint
    - stage: Tests
      if: (branch = master) OR (tag IS present) OR (type = pull_request)
      name: "Running Flow type check"
      script:
        - yarn run flow
    - stage: Tests
      if: (branch = master) OR (tag IS present) OR (type = pull_request)
      name: "Running unit tests"
      script:
        - yarn run test
